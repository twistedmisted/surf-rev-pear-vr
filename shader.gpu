

// Vertex shader
const vertexShaderSource = `
attribute vec3 vVertex;
attribute vec2 texCoord;
uniform mat4 ModelViewProjectionMatrix;

uniform bool isCamera;

varying vec2 texInterp;

void main() {
  vec4 vertPos4 = ModelViewProjectionMatrix * vec4(vVertex, 1.0);
  gl_Position = vertPos4;

  texInterp = texCoord;
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

varying vec2 texInterp;
uniform sampler2D tmu;
uniform float angleRad;

void main() {
    gl_FragColor = texture2D(tmu, texInterp);
}`;